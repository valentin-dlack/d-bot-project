{% extends "layout.twig" %}

{% block body %}

<!-- <script src="../../public/javascripts/addCommand.js"></script> -->

<h1 class="text-xl text-white text-center my-3 mx-0">Formulaire de cr√©ation</h1>

<form method="post">
    <!-- From with tailwind -->
    <div class="flex flex-wrap mx-3 mb-6">
        <div class="w-full px-3">
            <label class="block uppercase tracking-wide text-white text-xs font-bold mb-2" for="grid-first-name">
                Title
            </label>
            <input
                class="appearance-none block w-full bg-gray-200 text-gray-600 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                id="grid-first-name" type="text" name="title">
        </div>
    </div>
    <div class="flex flex-wrap mx-3 mb-6">
        <div class="w-full px-3">
            <label class="block uppercase tracking-wide text-white text-xs font-bold mb-2" for="grid-first-name">
                Name of the bot
            </label>
            <input
                class="appearance-none block w-full bg-gray-200 text-gray-600 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                id="grid-first-name" type="text" name="name">
        </div>
    </div>
    <div class="flex flex-wrap -mx-3 mb-6">
        <div class="w-full px-3">
            <label class="block uppercase tracking-wide text-white text-xs font-bold mb-2" for="grid-first-name">
                Content
            </label>
            <input
                class="appearance-none block w-full bg-gray-200 text-gray-600 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                id="grid-first-name" type="text" name="content">
        </div>
    </div>
    <div class="flex flex-wrap -mx-3 mb-6">
        <div class="w-full px-3">
            <button class="px-4 py-2 rounded-md bg-blue-400 text-white hover:bg-blue-600" onclick="addCommand()">Add a
                command</button>
        </div>
    </div>
    <div class="flex flex-wrap -mx-3 mb-6" id="commandList"></div>
    <div class="flex flex-wrap -mx-3 mb-6">
        <div class="w-full px-3">
            <button class="px-4 py-2 rounded-md bg-blue-400 text-white hover:bg-blue-600" type="submit">Submit
                !</button>
        </div>
    </div>
</form>

<script>
    const commandList = document.getElementById('commandList');
    let commandNumber = 0;

    const addCommand = () => {
        const newCommand = document.createElement('div');
        newCommand.innerHTML =
            `<input type="text" name="command" placeholder="Command name" class="py-2 px-4 bg-white" required>
            <input type="text" name="description" placeholder="Description" class="py-2 px-4 bg-white" required>
            <select name="category" class="py-2 px-4 bg-white" required>
                <option value="utils">Utilitaire</option>
                <option value="fun">Fun</option>
                <option value="moderation">Moderation</option>
                <option value="other">Other</option>
            </select>
            <button class="px-4 py-2 rounded-md bg-blue-400 text-white hover:bg-blue-600" onclick="addTypeCommand()">Add Option</button><br>`;

        commandList.appendChild(newCommand);
        commandNumber++;
    }

    const addTypeCommand = () => {
        const newTypeSelect = document.createElement('div');
        newTypeSelect.innerHTML =
            `<select name="option_type" onchange="addAction(this)" class="py-2 px-4 bg-white" required>
                <option value="string">String</option>
                <option value="user">User</option>
                <option value="role">Role</option>
                <option value="channel">Channel</option>
                <option value="none">None</option>
            </select>
            <input type="text" name="option_name" placeholder="Option Name" class="py-2 px-4 bg-white" required>
            <input type="checkbox" name="isRequired" class="py-2 px-4 bg-white text-white" required> Required ?</input>
            <div id="actionList-${commandNumber}"></div>`;


        commandList.appendChild(newTypeSelect);
    }

    const addAction = (select) => {
        const commandName = document.querySelector('[name="option_name"]');
        const commandRequired = document.querySelector('[name="isRequired"]');
        const newAction = document.querySelector(`[id="actionList-${commandNumber}"]`);
        commandName.removeAttribute('hidden');
        commandRequired.removeAttribute('hidden');
        commandRequired.value = "Required";
        if (select.value == "string") {
            newAction.innerHTML = `
            <select name="action" class="py-2 px-4 bg-white" required>
                <option value="upper">Uppercase the string</option>
                <option value="reverse">Reverse the string</option>
            </select>
            `;
        } else if (select.value == "user") {
            newAction.innerHTML = `
            <select name="action" class="py-2 px-4 bg-white" required>
                <option value="getUser">Get the user</option>
                <option value="getUserId">Get the user id</option>
                <option value="getUserName">Get the user name</option>
                <option value="banUser">Ban the user</option>
                <option value="unbanUser">Unban the user</option>
                <option value="kickUser">Kick the user</option>
                <option value="muteUser">Mute the user</option>
                <option value="getUserDiscriminator">Get the user discriminator</option>
                <option value="getUserAvatar">Get the user avatar</option>
                <option value="getUserAvatarUrl">Get the user avatar url</option>
                <option value="getUserStatus">Get the user status</option>
                <option value="getUserGame">Get the user game</option>
                <option value="getUserInfos">Get all the user infos</option>
            </select>`;
        } else if (select.value == "role") {
            newAction.innerHTML = `
            <select name="action" class="py-2 px-4 bg-white" required>
                <option value="deleteRole">Delete the role</option>
                <option value="editRole">Edit the role</option>
                <option value="getRoleId">Get the role id</option>
                <option value="getRoleName">Get the role name</option>
                <option value="getRoleColor">Get the role color</option>
                <option value="getRolePosition">Get the role position</option>
                <option value="getRoleInfos">Get all the role infos</option>
            </select>`;
        } else if (select.value == "channel") {
            newAction.innerHTML = `
            <select name="action" class="py-2 px-4 bg-white" required>
                <option value="getChannel">Get the channel</option>
                <option value="deleteChannel">Edit the channel</option>
                <option value="editChannel">Create the channel</option>
                <option value="getChannelId">Get the channel id</option>
                <option value="getChannelName">Get the channel name</option>
                <option value="getChannelType">Get the channel type</option>
                <option value="getChannelInfos">Get all the channel infos</option>
            </select>`;
        } else if (select.value == "none") {
            newAction.innerHTML = `
            <input type="text" name="action" placeholder="Text response" class="py-2 px-4 bg-white" required>`;
            commandName.setAttribute("hidden", "hidden");
            commandRequired.setAttribute("hidden", "hidden");
            commandRequired.value = "";
        }

        commandList.appendChild(newAction);
    }
</script>

{% endblock %}